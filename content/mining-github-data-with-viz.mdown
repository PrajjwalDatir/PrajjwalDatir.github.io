Title: Data Wrangling GitHub Stats with Viz
Date: 2017-01-14
Summary: Analyzing GitHub's most popular repos - data flow and data wrangling.
Tags: GitHub, Data
CoverImage: http://i.imgur.com/0PJXWKn.png
Thumbnail: http://i.imgur.com/IDclUIv.png

# Data Wrangling

I recently updated [Viz](http://donnemartin.com/viz/) with data from GitHub repos created in 2016.  Below are some details of how the raw data is wrangled into visualizations.

## Data Flow

<p align="center">
    <img src="http://i.imgur.com/W5hfGVo.png" alt="" class="img-responsive"/></a>
</p>

Mining data directly from GitHub, `Viz` is powered by the [GitHub API](https://developer.github.com/v3/) and leverages the following:

* [`github3.py`](https://github.com/sigmavirus24/github3.py) to access the GitHub API through Python.
* [`pandas`](https://github.com/pydata/pandas) in the following [IPython Notebook](https://github.com/donnemartin/viz/blob/master/githubstats/data_wrangling.ipynb) for data wrangling.
* [Google Maps API](https://developers.google.com/maps/?hl=en) through [`geocoder`](https://github.com/DenisCarriere/geocoder) for location data.
* [Tableau Public](https://public.tableau.com/s/) for visualizations.*

In the future, [Google BigQuery](https://cloud.google.com/bigquery/) along with [GitHub Archive](https://www.githubarchive.org/) could also supplement the GitHub API.

## Imports


```python
import re

import pandas as pd
```

## Prepare Repo Data

Load the repos data and drop duplicates:


```python
repos = pd.read_csv("data/2016/repos-dump.csv", quotechar='"', skipinitialspace=True)
print('Shape before dropping duplicates', repos.shape)
repos = repos.drop_duplicates(subset='full_name', keep='last')
print('Shape after  dropping duplicates', repos.shape)
repos.head()
```

    Shape before dropping duplicates (8043, 5)
    Shape after  dropping duplicates (8040, 5)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>stars</th>
      <th>forks</th>
      <th>description</th>
      <th>language</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>yarnpkg/yarn</td>
      <td>21060</td>
      <td>786</td>
      <td>üì¶üêà Fast, reliable, and secure dependency manag...</td>
      <td>JavaScript</td>
    </tr>
    <tr>
      <th>1</th>
      <td>facebookincubator/create-react-app</td>
      <td>17555</td>
      <td>1821</td>
      <td>Create React apps with no build configuration.</td>
      <td>JavaScript</td>
    </tr>
    <tr>
      <th>2</th>
      <td>zeit/hyper</td>
      <td>13618</td>
      <td>907</td>
      <td>A terminal built on web technologies</td>
      <td>JavaScript</td>
    </tr>
    <tr>
      <th>3</th>
      <td>ParsePlatform/parse-server</td>
      <td>12167</td>
      <td>3319</td>
      <td>Parse-compatible API server module for Node/Ex...</td>
      <td>JavaScript</td>
    </tr>
    <tr>
      <th>4</th>
      <td>juliangarnier/anime</td>
      <td>10245</td>
      <td>539</td>
      <td>Javascript Animation Engine</td>
      <td>JavaScript</td>
    </tr>
  </tbody>
</table>
</div>



Separate out the `user` and `repo` from `full_name` into new columns:


```python
def extract_user(line):
    return line.split('/')[0]

def extract_repo(line):
    return line.split('/')[1]

repos['user'] = repos['full_name'].str[:].apply(extract_user)
repos['repo'] = repos['full_name'].str[:].apply(extract_repo)
print(repos.shape)
repos.head()
```

    (8040, 7)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>stars</th>
      <th>forks</th>
      <th>description</th>
      <th>language</th>
      <th>user</th>
      <th>repo</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>yarnpkg/yarn</td>
      <td>21060</td>
      <td>786</td>
      <td>üì¶üêà Fast, reliable, and secure dependency manag...</td>
      <td>JavaScript</td>
      <td>yarnpkg</td>
      <td>yarn</td>
    </tr>
    <tr>
      <th>1</th>
      <td>facebookincubator/create-react-app</td>
      <td>17555</td>
      <td>1821</td>
      <td>Create React apps with no build configuration.</td>
      <td>JavaScript</td>
      <td>facebookincubator</td>
      <td>create-react-app</td>
    </tr>
    <tr>
      <th>2</th>
      <td>zeit/hyper</td>
      <td>13618</td>
      <td>907</td>
      <td>A terminal built on web technologies</td>
      <td>JavaScript</td>
      <td>zeit</td>
      <td>hyper</td>
    </tr>
    <tr>
      <th>3</th>
      <td>ParsePlatform/parse-server</td>
      <td>12167</td>
      <td>3319</td>
      <td>Parse-compatible API server module for Node/Ex...</td>
      <td>JavaScript</td>
      <td>ParsePlatform</td>
      <td>parse-server</td>
    </tr>
    <tr>
      <th>4</th>
      <td>juliangarnier/anime</td>
      <td>10245</td>
      <td>539</td>
      <td>Javascript Animation Engine</td>
      <td>JavaScript</td>
      <td>juliangarnier</td>
      <td>anime</td>
    </tr>
  </tbody>
</table>
</div>



## Prepare User Data

Load the users data and drop duplicates:


```python
users = pd.read_csv("data/2016/user-geocodes-dump.csv", quotechar='"', skipinitialspace=True)
print('Shape before dropping duplicates', users.shape)
users = users.drop_duplicates(subset='id', keep='last')
print('Shape after  dropping duplicates', users.shape)
users.head()
```

    Shape before dropping duplicates (5991, 8)
    Shape after  dropping duplicates (5991, 8)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>symentis</td>
      <td>symentis GmbH</td>
      <td>Organization</td>
      <td>Unterhaching, Munich</td>
      <td>48.068918</td>
      <td>11.621253</td>
      <td>Unterhaching</td>
      <td>Germany</td>
    </tr>
    <tr>
      <th>1</th>
      <td>voghDev</td>
      <td>Olmo Gallegos</td>
      <td>User</td>
      <td>Granada</td>
      <td>37.177336</td>
      <td>-3.598557</td>
      <td>Granada</td>
      <td>Spain</td>
    </tr>
    <tr>
      <th>2</th>
      <td>wxyyxc1992</td>
      <td>Áéã‰∏ãÈÇÄÊúàÁÜä(Chevalier)</td>
      <td>User</td>
      <td>NanJing</td>
      <td>32.060255</td>
      <td>118.796877</td>
      <td>Nanjing</td>
      <td>China</td>
    </tr>
    <tr>
      <th>3</th>
      <td>vermont42</td>
      <td>Josh Adams</td>
      <td>User</td>
      <td>Berkeley, California</td>
      <td>37.871593</td>
      <td>-122.272747</td>
      <td>Berkeley</td>
      <td>United States</td>
    </tr>
    <tr>
      <th>4</th>
      <td>mjosaarinen</td>
      <td>Markku-Juhani O. Saarinen</td>
      <td>User</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>



Rename column `id` to `user`:


```python
users.rename(columns={'id': 'user'}, inplace=True)
users.head()
```




<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>user</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>symentis</td>
      <td>symentis GmbH</td>
      <td>Organization</td>
      <td>Unterhaching, Munich</td>
      <td>48.068918</td>
      <td>11.621253</td>
      <td>Unterhaching</td>
      <td>Germany</td>
    </tr>
    <tr>
      <th>1</th>
      <td>voghDev</td>
      <td>Olmo Gallegos</td>
      <td>User</td>
      <td>Granada</td>
      <td>37.177336</td>
      <td>-3.598557</td>
      <td>Granada</td>
      <td>Spain</td>
    </tr>
    <tr>
      <th>2</th>
      <td>wxyyxc1992</td>
      <td>Áéã‰∏ãÈÇÄÊúàÁÜä(Chevalier)</td>
      <td>User</td>
      <td>NanJing</td>
      <td>32.060255</td>
      <td>118.796877</td>
      <td>Nanjing</td>
      <td>China</td>
    </tr>
    <tr>
      <th>3</th>
      <td>vermont42</td>
      <td>Josh Adams</td>
      <td>User</td>
      <td>Berkeley, California</td>
      <td>37.871593</td>
      <td>-122.272747</td>
      <td>Berkeley</td>
      <td>United States</td>
    </tr>
    <tr>
      <th>4</th>
      <td>mjosaarinen</td>
      <td>Markku-Juhani O. Saarinen</td>
      <td>User</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>



## Merge Repo and User Data

Left join repos and users:


```python
repos_users = pd.merge(repos, users, on='user', how='left')
print('Shape repos:', repos.shape)
print('Shape users:', users.shape)
print('Shape repos_users:', repos_users.shape)
repos_users.head()
```

    Shape repos: (8040, 7)
    Shape users: (5991, 8)
    Shape repos_users: (8040, 14)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>stars</th>
      <th>forks</th>
      <th>description</th>
      <th>language</th>
      <th>user</th>
      <th>repo</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>yarnpkg/yarn</td>
      <td>21060</td>
      <td>786</td>
      <td>üì¶üêà Fast, reliable, and secure dependency manag...</td>
      <td>JavaScript</td>
      <td>yarnpkg</td>
      <td>yarn</td>
      <td>Yarn</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>facebookincubator/create-react-app</td>
      <td>17555</td>
      <td>1821</td>
      <td>Create React apps with no build configuration.</td>
      <td>JavaScript</td>
      <td>facebookincubator</td>
      <td>create-react-app</td>
      <td>Facebook Incubator</td>
      <td>Organization</td>
      <td>Menlo Park, California</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
    </tr>
    <tr>
      <th>2</th>
      <td>zeit/hyper</td>
      <td>13618</td>
      <td>907</td>
      <td>A terminal built on web technologies</td>
      <td>JavaScript</td>
      <td>zeit</td>
      <td>hyper</td>
      <td>ZEIT</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>ParsePlatform/parse-server</td>
      <td>12167</td>
      <td>3319</td>
      <td>Parse-compatible API server module for Node/Ex...</td>
      <td>JavaScript</td>
      <td>ParsePlatform</td>
      <td>parse-server</td>
      <td>Parse</td>
      <td>Organization</td>
      <td>Menlo Park, CA</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
    </tr>
    <tr>
      <th>4</th>
      <td>juliangarnier/anime</td>
      <td>10245</td>
      <td>539</td>
      <td>Javascript Animation Engine</td>
      <td>JavaScript</td>
      <td>juliangarnier</td>
      <td>anime</td>
      <td>Julian Garnier</td>
      <td>User</td>
      <td>Paris</td>
      <td>48.856614</td>
      <td>2.352222</td>
      <td>Paris</td>
      <td>France</td>
    </tr>
  </tbody>
</table>
</div>



## Tidy Up Repo and User Data

Re-order the columns:


```python
repos_users = repos_users.reindex_axis(['full_name',
                                        'repo',
                                        'description',
                                        'stars',
                                        'forks',
                                        'language',
                                        'user',
                                        'name',
                                        'type',
                                        'location',
                                        'lat',
                                        'long',
                                        'city',
                                        'country'], axis=1)
print(repos_users.shape)
repos_users.head()
```

    (8040, 14)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>repo</th>
      <th>description</th>
      <th>stars</th>
      <th>forks</th>
      <th>language</th>
      <th>user</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>yarnpkg/yarn</td>
      <td>yarn</td>
      <td>üì¶üêà Fast, reliable, and secure dependency manag...</td>
      <td>21060</td>
      <td>786</td>
      <td>JavaScript</td>
      <td>yarnpkg</td>
      <td>Yarn</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>facebookincubator/create-react-app</td>
      <td>create-react-app</td>
      <td>Create React apps with no build configuration.</td>
      <td>17555</td>
      <td>1821</td>
      <td>JavaScript</td>
      <td>facebookincubator</td>
      <td>Facebook Incubator</td>
      <td>Organization</td>
      <td>Menlo Park, California</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
    </tr>
    <tr>
      <th>2</th>
      <td>zeit/hyper</td>
      <td>hyper</td>
      <td>A terminal built on web technologies</td>
      <td>13618</td>
      <td>907</td>
      <td>JavaScript</td>
      <td>zeit</td>
      <td>ZEIT</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>ParsePlatform/parse-server</td>
      <td>parse-server</td>
      <td>Parse-compatible API server module for Node/Ex...</td>
      <td>12167</td>
      <td>3319</td>
      <td>JavaScript</td>
      <td>ParsePlatform</td>
      <td>Parse</td>
      <td>Organization</td>
      <td>Menlo Park, CA</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
    </tr>
    <tr>
      <th>4</th>
      <td>juliangarnier/anime</td>
      <td>anime</td>
      <td>Javascript Animation Engine</td>
      <td>10245</td>
      <td>539</td>
      <td>JavaScript</td>
      <td>juliangarnier</td>
      <td>Julian Garnier</td>
      <td>User</td>
      <td>Paris</td>
      <td>48.856614</td>
      <td>2.352222</td>
      <td>Paris</td>
      <td>France</td>
    </tr>
  </tbody>
</table>
</div>



## Add Overall Ranks

Rank each element based on number of stars:


```python
repos_users['rank'] = repos_users['stars'].rank(ascending=False)
print(repos_users.shape)
repos_users.head()
```

    (8040, 15)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>repo</th>
      <th>description</th>
      <th>stars</th>
      <th>forks</th>
      <th>language</th>
      <th>user</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
      <th>rank</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>yarnpkg/yarn</td>
      <td>yarn</td>
      <td>üì¶üêà Fast, reliable, and secure dependency manag...</td>
      <td>21060</td>
      <td>786</td>
      <td>JavaScript</td>
      <td>yarnpkg</td>
      <td>Yarn</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>facebookincubator/create-react-app</td>
      <td>create-react-app</td>
      <td>Create React apps with no build configuration.</td>
      <td>17555</td>
      <td>1821</td>
      <td>JavaScript</td>
      <td>facebookincubator</td>
      <td>Facebook Incubator</td>
      <td>Organization</td>
      <td>Menlo Park, California</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>zeit/hyper</td>
      <td>hyper</td>
      <td>A terminal built on web technologies</td>
      <td>13618</td>
      <td>907</td>
      <td>JavaScript</td>
      <td>zeit</td>
      <td>ZEIT</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>8</td>
    </tr>
    <tr>
      <th>3</th>
      <td>ParsePlatform/parse-server</td>
      <td>parse-server</td>
      <td>Parse-compatible API server module for Node/Ex...</td>
      <td>12167</td>
      <td>3319</td>
      <td>JavaScript</td>
      <td>ParsePlatform</td>
      <td>Parse</td>
      <td>Organization</td>
      <td>Menlo Park, CA</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
      <td>9</td>
    </tr>
    <tr>
      <th>4</th>
      <td>juliangarnier/anime</td>
      <td>anime</td>
      <td>Javascript Animation Engine</td>
      <td>10245</td>
      <td>539</td>
      <td>JavaScript</td>
      <td>juliangarnier</td>
      <td>Julian Garnier</td>
      <td>User</td>
      <td>Paris</td>
      <td>48.856614</td>
      <td>2.352222</td>
      <td>Paris</td>
      <td>France</td>
      <td>16</td>
    </tr>
  </tbody>
</table>
</div>



## Verify Results: Users

Equivalent [GitHub search query](https://github.com/search?utf8=%E2%9C%93&q=created%3A2016-01-01..2016-12-31+stars%3A%3E%3D100+user%3Adonnemartin&type=Repositories&ref=searchresults): `created:2016-01-01..2016-12-31 stars:>=100 user:donnemartin`

*Note: The data might be slightly off, as the search query will take into account data up to when the query was executed.  Data in this notebook was mined on January 1, 2017 to 'freeze' the results for the year 2016.  The longer you run the search from January 1, 2017, the larger the discrepancy.*


```python
repos_users[repos_users['user'] == 'donnemartin']
```




<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>repo</th>
      <th>description</th>
      <th>stars</th>
      <th>forks</th>
      <th>language</th>
      <th>user</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
      <th>rank</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3692</th>
      <td>donnemartin/gitsome</td>
      <td>gitsome</td>
      <td>A supercharged Git/GitHub command line interfa...</td>
      <td>4482</td>
      <td>158</td>
      <td>Python</td>
      <td>donnemartin</td>
      <td>Donne Martin</td>
      <td>User</td>
      <td>Washington, D.C.</td>
      <td>38.907192</td>
      <td>-77.036871</td>
      <td>Washington</td>
      <td>United States</td>
      <td>89.5</td>
    </tr>
    <tr>
      <th>3890</th>
      <td>donnemartin/viz</td>
      <td>viz</td>
      <td>GitHub's most popular repos, interactively vis...</td>
      <td>359</td>
      <td>27</td>
      <td>Python</td>
      <td>donnemartin</td>
      <td>Donne Martin</td>
      <td>User</td>
      <td>Washington, D.C.</td>
      <td>38.907192</td>
      <td>-77.036871</td>
      <td>Washington</td>
      <td>United States</td>
      <td>2521.0</td>
    </tr>
  </tbody>
</table>
</div>



## Verify Results: Python Repos

Equivalent [GitHub search query](https://github.com/search?utf8=%E2%9C%93&q=created%3A2016-01-01..2016-12-31+stars%3A%3E%3D100+language%3Apython&type=Repositories&ref=searchresults): `created:2016-01-01..2016-12-31 stars:>=100 language:python`

*Note: The data might be slightly off, as the search query will take into account data up to when the query was executed.  Data in this notebook was mined on January 1, 2017 to 'freeze' the results for the year 2016.  The longer you run the search from January 1, 2017, the larger the discrepancy.*


```python
print(repos_users[repos_users['language'] == 'Python'].shape)
repos_users[repos_users['language'] == 'Python'].head()
```

    (866, 15)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>repo</th>
      <th>description</th>
      <th>stars</th>
      <th>forks</th>
      <th>language</th>
      <th>user</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
      <th>rank</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3681</th>
      <td>tensorflow/models</td>
      <td>models</td>
      <td>Models built with TensorFlow</td>
      <td>10336</td>
      <td>2707</td>
      <td>Python</td>
      <td>tensorflow</td>
      <td>NaN</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>15</td>
    </tr>
    <tr>
      <th>3682</th>
      <td>songrotek/Deep-Learning-Papers-Reading-Roadmap</td>
      <td>Deep-Learning-Papers-Reading-Roadmap</td>
      <td>Deep Learning papers reading roadmap for anyon...</td>
      <td>8707</td>
      <td>1123</td>
      <td>Python</td>
      <td>songrotek</td>
      <td>Flood Sung</td>
      <td>User</td>
      <td>China</td>
      <td>35.861660</td>
      <td>104.195397</td>
      <td>NaN</td>
      <td>China</td>
      <td>23</td>
    </tr>
    <tr>
      <th>3683</th>
      <td>Rochester-NRT/RocAlphaGo</td>
      <td>RocAlphaGo</td>
      <td>An independent, student-led replication of Dee...</td>
      <td>7597</td>
      <td>2111</td>
      <td>Python</td>
      <td>Rochester-NRT</td>
      <td>NaN</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>35</td>
    </tr>
    <tr>
      <th>3684</th>
      <td>alexjc/neural-doodle</td>
      <td>neural-doodle</td>
      <td>Turn your two-bit doodles into fine artworks w...</td>
      <td>7226</td>
      <td>514</td>
      <td>Python</td>
      <td>alexjc</td>
      <td>Alex J. Champandard</td>
      <td>User</td>
      <td>Vienna, Austria</td>
      <td>48.208174</td>
      <td>16.373819</td>
      <td>Vienna</td>
      <td>Austria</td>
      <td>38</td>
    </tr>
    <tr>
      <th>3685</th>
      <td>p-e-w/maybe</td>
      <td>maybe</td>
      <td>:open_file_folder: :rabbit2: :tophat: See wha...</td>
      <td>6078</td>
      <td>162</td>
      <td>Python</td>
      <td>p-e-w</td>
      <td>Philipp Emanuel Weidmann</td>
      <td>User</td>
      <td>Anywhere the Internet is</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>52</td>
    </tr>
  </tbody>
</table>
</div>



## Verify Results: Overall Repos

Equivalent [GitHub search query](https://github.com/search?utf8=%E2%9C%93&q=created%3A2016-01-01..2016-12-31+stars%3A%3E%3D100&type=Repositories&ref=searchresults): `created:2016-01-01..2016-12-31 stars:>=100`

*Note: The data might be slightly off, as the search query will take into account data up to when the query was executed.  Data in this notebook was mined on January 1, 2017 to 'freeze' the results for the year 2016.  The longer you run the search from January 1, 2017, the larger the discrepancy.*


```python
print(repos_users.shape)
repos_users.head()
```

    (8040, 15)





<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>full_name</th>
      <th>repo</th>
      <th>description</th>
      <th>stars</th>
      <th>forks</th>
      <th>language</th>
      <th>user</th>
      <th>name</th>
      <th>type</th>
      <th>location</th>
      <th>lat</th>
      <th>long</th>
      <th>city</th>
      <th>country</th>
      <th>rank</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>yarnpkg/yarn</td>
      <td>yarn</td>
      <td>üì¶üêà Fast, reliable, and secure dependency manag...</td>
      <td>21060</td>
      <td>786</td>
      <td>JavaScript</td>
      <td>yarnpkg</td>
      <td>Yarn</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>facebookincubator/create-react-app</td>
      <td>create-react-app</td>
      <td>Create React apps with no build configuration.</td>
      <td>17555</td>
      <td>1821</td>
      <td>JavaScript</td>
      <td>facebookincubator</td>
      <td>Facebook Incubator</td>
      <td>Organization</td>
      <td>Menlo Park, California</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>zeit/hyper</td>
      <td>hyper</td>
      <td>A terminal built on web technologies</td>
      <td>13618</td>
      <td>907</td>
      <td>JavaScript</td>
      <td>zeit</td>
      <td>ZEIT</td>
      <td>Organization</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>8</td>
    </tr>
    <tr>
      <th>3</th>
      <td>ParsePlatform/parse-server</td>
      <td>parse-server</td>
      <td>Parse-compatible API server module for Node/Ex...</td>
      <td>12167</td>
      <td>3319</td>
      <td>JavaScript</td>
      <td>ParsePlatform</td>
      <td>Parse</td>
      <td>Organization</td>
      <td>Menlo Park, CA</td>
      <td>37.452960</td>
      <td>-122.181725</td>
      <td>Menlo Park</td>
      <td>United States</td>
      <td>9</td>
    </tr>
    <tr>
      <th>4</th>
      <td>juliangarnier/anime</td>
      <td>anime</td>
      <td>Javascript Animation Engine</td>
      <td>10245</td>
      <td>539</td>
      <td>JavaScript</td>
      <td>juliangarnier</td>
      <td>Julian Garnier</td>
      <td>User</td>
      <td>Paris</td>
      <td>48.856614</td>
      <td>2.352222</td>
      <td>Paris</td>
      <td>France</td>
      <td>16</td>
    </tr>
  </tbody>
</table>
</div>



## Output Results

Write out the results to csv:


```python
users.to_csv('data/2016/users.csv', index=False)
repos_users.to_csv('data/2016/repos-users-geocodes.csv', index=False)
repos_users.to_csv('data/2016/repos-users.csv', index=False)
```


```python
repos_rank = repos_users.reindex_axis(['full_name', 'rank'], axis=1)
repos_rank.to_csv('data/2016/repos-ranks.csv', index=False)
```

 Visualize in Tableau:

<p align="center">
    <img src="http://i.imgur.com/MKjzLwp.png" alt="" class="img-responsive"/></a>
</p>
